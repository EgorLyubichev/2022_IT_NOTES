Projects lifecyrcle:
- clean: очистка папки target
- validate: проверка целостности и проверка на то, что наши файлы проекта могут быть компилированы
- compile: компиляция / генерация папки target
- test: запуск всех файлов, кот. находятся в папки test и помеченые как test source файлы
- package: преобразование нашего проекта в какой-то архив (для этого в pom.xml указывается тег <packaging>)
- verify: проверяем целостность того, что мы сгенерировали
- install: размещает наш сгенерированный таргет пакет в джава архив (либо тот, какой сделали) в локальный репозиторий
- site: собирает джава доку и кладет в джава архив
- deploy: отправляет наш джава архив из папки .m2 в удаленный репозиторий.

Область распространения зависимости позволяет включать зависимости только на определённую стадию построения проекта. Существует 6 возможных областей:
    compile. Область по умолчанию. Зависимость доступна во всех путях поиска классов в проекте. Распространяется на зависимые проекты.
    provided. Область аналогична compile, за исключением того, что JDK или контейнер сам предоставит зависимость во время выполнения программы.
    runtime. Зависимость не нужна для компиляции, но нужна для выполнения.
    test. Зависимость не нужна для нормальной работы приложения, а нужна только для компиляции и запуска тестов.
    system. Область аналогична provided за исключением того, что содержащий зависимость JAR указывается явно. Артефакт не ищется в репозитории.
    import (начиная с версии Maven 2.0.9) используется только с зависимостью типа pom в секции <dependencyManagement>. Зависимости текущего POM заменяются на зависимости из указанного POM.
	
	В pom.xml область видимости (<scope>) указывается непосредственно в зависимости, с которой мы работаем. Пример:
	 <dependencies>
    <dependency>
    
      <!-- координаты необходимой библиотеки -->
      
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      
      <!-- эта библиотека используется только для запуска и компилирования тестов -->
      
      <scope>test</scope>
      
    </dependency>
  </dependencies>
</project>