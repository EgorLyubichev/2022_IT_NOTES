- - - Запись объектов в файл. - - -

FileOutputStream - этот класс и его объекты предназначены для записи байтов в файл. Т.е. не важно, объект это, картинка, звук - что угодно.
Этот класс беспокоит только то, что он записывает последовательность байтов в файл. 

ObjectOutputStream - предназначен исключительно для записи объектов в файл. Он более конкретный, более узко специализированный. Но для того, чтобы ему записывать объекты, ему нужен более абстрактный и более приближенный к байтам объект FileOutputStream, т.к. в конечном итоге, звуки, картинки, объекты - всё это последовательность байтов.

Public class WriteObject{
	public static void main(String[] args){
		Person person1 = new Person(1, "Bob");
		Person person2 = new Person(2, "Nick");
		
		try{
			FileOutputStream fos = new FileOutputStream("people.bin"); //people - название файла
			ObjectOutputStream oos = new ObjectOutputStream(fos);
		} catch(IOException e){
			e.printStackTrace();
		}
	}
}

Объект ObjectOutputStream принимает объекты, преобразовывает их в байты. А затем уже объект класса FileOutputStream эти байты записывает в файл.

Запись объектов происходит при помощи метода writeObject. Т.е. в блок try следует дописать:
	oos.writeObject(person1);
	oos.writeObject(person2);
	oos.close(); // не забыть закрыть поток
	
Нужно помнить, что нужно не забыть добавить к классу Person "implements Serializable", иначе не пойдёт.

- - - Чтение объектов из файла - - -

public class ReadObject{
	public static void main(String[] args){
		try{
			FileInputStream fis = new FileInputStream("people.bin");
			ObjectInputStream ois = new ObjectInputStream(fis);
			
			
		} catch(IOException e){
			e.printStackTrace();
		}
		
	}
}


______________________________________________________________________________________________________________

Примеры с урока Владимира Ерёменко:

package by.lev;

import java.io.*;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {

//        String text = "Hello World";
//        try(FileOutputStream fos = new FileOutputStream("C://SomeDir//notes.txt")){
//          byte[] buffer = text.getBytes();
//          fos.write(buffer, 0, buffer.length);
//        }
//        catch(IOException ex){
//            System.out.println(ex.getMessage());
//        }
//        System.out.println("The file has been written");

//        String text = "Hello World";
//        try(FileInputStream fin = new FileInputStream("src/files/file.txt")){
//            System.err.printf("File size: %d bytes \n", fin.available());
//            int i = -1;
//            while((i = fin.read()) != -1){
//                System.err.print((char) i);
//            }
//
//        }
//        catch(IOException ex){
//            System.err.println(ex.getMessage());
//        }

//        try{
//            InputStreamReader inputStreamReader = new InputStreamReader(System.in);
//            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
//            System.out.println("Enter... ");
//            String data = bufferedReader.readLine();
//            System.out.println("... " + data);
//
//        }catch (IOException e){
//            System.out.println(e.getMessage());
//        }


//        try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//        BufferedWriter bw = new BufferedWriter(new FileWriter("src/files/file.txt"))){
//            System.out.println(" Enter ... ");
//            String text;
//            while (!(text=br.readLine()).equals("ESC")){
//                bw.write(text + "\n");
//                bw.flush();
//            }
//        }
//        catch (IOException e){
//            System.out.println(e.getMessage());
//        }

        try{
            Scanner scan = new Scanner(System.in);
            System.out.println("Enter first number...");
            int num1 = scan.nextInt();
            System.out.println("Enter second number...");
            int num2 = scan.nextInt();
            System.out.println("Sum is :" + (num1+num2));
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
}
