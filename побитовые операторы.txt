/*
	2^8 |	2^7 |	2^6 |	2^5 |	2^4 |	2^3 |	2^2 |	2^1 |	2^0 |
	256 |	128 |	64  |	32  |	16  |	8   |	4   |	2   |	1   |
	
							1		1		1		0		1		0		 - число из примера.
	
	При помощи данной таблицы можно быстро переводить числа из десятичной системы исчисления в двоичную.
	Если мы имеем число в двоичной системе исчисления, например 111010, то нужно подставить цифры этого числа справа налево и сложить полученный результат. 111010 => 32 + 16 + 8 + 2 = 58.
	
	Обратная конвертация. Допустим у нас есть число 133. При помощи таблицы, можно сразу видеть, из каких чисел состоит данное число.
	133 = 128 + 5 - следовательно, ставим '1' в таблице под числом 128.
	Осталось 5. => где 4, ставим '1', и где 1, ставим '1'. В пробелы соответственно '0'.
	
	2^8 |	2^7 |	2^6 |	2^5 |	2^4 |	2^3 |	2^2 |	2^1 |	2^0 |
	256 |	128 |	64  |	32  |	16  |	8   |	4   |	2   |	1   |
			1		0		0		0		0		1		0		1	
	
	Следовательно, 133 = 10000101.
*/
	
public class Test {
    public static void main(String[] args) {
    int i = 0b00000100; // запись числа в двоичном виде
        System.out.println(i); // консоль: 4
    // Если нужно провести операцию в обратном порядке, то для этого есть функция:
        int a = 8;
        System.out.println(Integer.toBinaryString(a)); //консоль: 1000
    }
}