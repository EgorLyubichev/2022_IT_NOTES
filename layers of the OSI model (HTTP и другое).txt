- - - Уровни модели OSI - - -
https://ru.wikipedia.org/wiki/%D0%A1%D0%B5%D1%82%D0%B5%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C_OSI
https://ru.wikipedia.org/wiki/HTTP
https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BA%D0%BE%D0%B4%D0%BE%D0%B2_%D1%81%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D1%8F_HTTP

Сетевая модель OSI (The Open Systems Interconnection model) — сетевая модель стека (магазина) сетевых протоколов OSI/ISO. Посредством данной модели различные сетевые устройства могут взаимодействовать друг с другом. Модель определяет различные уровни взаимодействия систем. Каждый уровень выполняет определённые функции при таком взаимодействии.

Протоколы связи позволяют структуре на одном хосте взаимодействовать с соответствующей структурой того же уровня на другом хосте.
На каждом уровне N два объекта обмениваются блоками данных (PDU) с помощью протокола данного уровня на соответствующих устройствах. Каждый PDU содержит блок служебных данных (SDU), связанный с верхним или нижним протоколом.

- - - Уровни модели OSI:
____________| уровень (layer):	________________|_тип данных:________________________________
			| 7) прикладной (application)		| данные
			| 6) представления (presentation)	| данные
HOST LAYERS	| 5) сеансовый (session)			| данные
____________| 4) транспортный (transport)_______| сегменты (segment) / датаграммы (datagram)
			| 3) сетевой (network)				| пакеты (packet)
MEDIA LAYERS| 2) канальный (data link)			| биты (bit) / кадры (frame)
____________| 1) физический (physicial)_________| биты (bit)

- некоторые протоколы:
Канальный уровень: Ethernet, PPP, IEEE, DSL и др.
Сетевой уровень - IPv4, IPv6, (IPsec, ICMP) и пр.
Транспортный - TCP, UDP
Сеансовый - RPC, PAP
Представления - ASCII, MIDI, JPEG, EBCDIC
Прикладной - HTTP, FTP, POP3, WebSocket

- Ethernet - семейство технологий пакетной передачи данных между устройствами для компьютерных и промышленных сетей.
- PPP (Point-to-point protocol). Двухточечный протокол канального уровня (Data Link) сетевой модели OSI. Обычно используется для установления прямой связи между двумя узлами сети, причём он может обеспечить аутентификацию соединения, шифрование и сжатие данных.
- IEEE (point-to-multipoint). Стандарт беспроводных региональных сетей, описывающий двухуровневую архитектуру (уровень PHY и уровень MAC) с многоточечным (point-to-multipoint) соединением. Сеть предназначена как для работы с профессиональными фиксированными базовыми станциями, так и с портативными (либо фиксированными) пользовательскими терминалами (модемы).
- xDSL (англ. digital subscriber line, цифровая абонентская линия) — семейство технологий, позволяющих значительно повысить пропускную способность абонентской линии телефонной сети общего пользования путём использования эффективных линейных кодов и адаптивных методов коррекции искажений линии на основе современных достижений микроэлектроники и методов цифровой обработки сигнала.  

- IPv4 (Internet Protocol version 4). For example:
192.0.2.235 - десятичная с точками;
0xC0.0x00.0x02.0xEB - шестнадцатиричная с точками;
0300.0000.0002.0353 - восьмиричная с точками;
0xC00002EB - шестнадцатиричная;
3221226219 - десятичная;
030000001353 - восьмиричная.

- IPv6 (Internet Protocol version 6)
- TCP ждёт подтверждения успешной доставки сегментов от получателя.
- UDP не ждёт подтверждения и потому идёт потоковая информация.
- RPC (remote procedure call). Удалённый вызов процедур — класс технологий, позволяющих программам вызывать функции или процедуры в другом адресном пространстве (на удалённых узлах, либо в независимой сторонней системе на том же узле). Обычно реализация RPC-технологии включает два компонента: сетевой протокол для обмена в режиме клиент-сервер и язык сериализации объектов (или структур для необъектных RPC). Различные реализации имеют отличающуюся друг от друга архитектуру и разнятся в возможностях: одни реализуют архитектуру SOA, другие — CORBA или DCOM. На транспортном уровне RPC используют в основном протоколы TCP и UDP, однако, некоторые построены на основе HTTP (что нарушает архитектуру ISO/OSI, так как HTTP — изначально не транспортный протокол). 

FTP, POP3, SMTP, WebSocket

- - - HTTP - - -

- Request:
Request line: method (POST, GET, PUT и др.) URN (Uniform Resource Name) protocol version (HTTP/1.1)
Headers:	Host: URL (Uniform Resource Location)
			User: ... (инфа о браузере, язык запроса, системные возможности и др.)
			Accept: ...
			Accept: ...
			...
			Connection: удержать / разорвать / держать какое-то время и т.п.
Body:		Есть у методов POST, PUT, PATCH etc. - какая-то инфа, которую мы пушим на сервер.

- Response: Призван возвращать информацию с сервера на запрос.
Example:

HTTP/1.1 200 OK
Cache-Control: no-cache
Server: libnhttpd
Date: Wed Jul 4 15:38:53 2012
Connection: Keep-Alive:
Content-Type: application/json;charset=UTF-8
Content-Length: 157
{
	"entry":	{
		"affectedRows": 10,
		"uri": "http://localhost/objectserver/restapi/alerts/status"
	}
}

- - Статус коды респонсов:
- 100: информационные.

- 200: success (успех).
200 - OK
201 - Created. Когда мы внесли обновления (ч/з POST, PUT и т.п.)
202 - Accepted. Запрос был принят на обработку, но она не завершена (подгружается ещё что-то, но мы видим уже успешный результат).
204 - No content. Сервер успешно обработал запрос, но в ответе имеются только заголовки, без тела сообщения.

- 300: Rederect (связаны с перенаправлением)
301 - переместили ресурс окончательно.
302 - переместили ресурс временно.
305 Use proxy. Без подключения прокси-сервера у нас нет полного доступа к ресурсу.

- 400: Ошибки запросов клиента.
400 Bad request. Когда ожидали какие-то параметры для обработки и не получили их.
401 - не авторизован, не представился.
403 - запрещено (не уполномочен). КОгда залогинился верно, но нет доступа к данному ресурсу (административный, например, ресурс).
404 - Not found. Ресурс не найден.
405 - доступ к ресурсу не разрешен по запрашиваемому http методу (например,  DELETE, когда прав на удаление нет).
408 - request timeout
414 - URI too long (more 8500 symbols)
415 - unsupported media (например, формат видео не читается в данном браузере и т.п.)
429 - слишком много запросов.

- 500: Ошибки сервера.
500 - сервер упал (необработанный Exception и т.п.)
502 - когда пользователя заблокировали
503 - сервер временно не имеет возможности обработать запрос.
504 - сервер в роли шлюза или прокси-сервера не дождался ответа от вышестоящего сервера.
522 - connection timed out.

Сервлет - приложение, которое способно обрабатывать http запросы пользователя.